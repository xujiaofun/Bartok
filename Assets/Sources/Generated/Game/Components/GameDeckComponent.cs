//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentContextApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameContext {

    public GameEntity deckEntity { get { return GetGroup(GameMatcher.Deck).GetSingleEntity(); } }
    public Bartok.DeckComponent deck { get { return deckEntity.deck; } }
    public bool hasDeck { get { return deckEntity != null; } }

    public GameEntity SetDeck(System.Collections.Generic.List<Bartok.Decorator> newDecotators, System.Collections.Generic.List<Bartok.CardDefinition> newCardDefs) {
        if (hasDeck) {
            throw new Entitas.EntitasException("Could not set Deck!\n" + this + " already has an entity with Bartok.DeckComponent!",
                "You should check if the context already has a deckEntity before setting it or use context.ReplaceDeck().");
        }
        var entity = CreateEntity();
        entity.AddDeck(newDecotators, newCardDefs);
        return entity;
    }

    public void ReplaceDeck(System.Collections.Generic.List<Bartok.Decorator> newDecotators, System.Collections.Generic.List<Bartok.CardDefinition> newCardDefs) {
        var entity = deckEntity;
        if (entity == null) {
            entity = SetDeck(newDecotators, newCardDefs);
        } else {
            entity.ReplaceDeck(newDecotators, newCardDefs);
        }
    }

    public void RemoveDeck() {
        deckEntity.Destroy();
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public Bartok.DeckComponent deck { get { return (Bartok.DeckComponent)GetComponent(GameComponentsLookup.Deck); } }
    public bool hasDeck { get { return HasComponent(GameComponentsLookup.Deck); } }

    public void AddDeck(System.Collections.Generic.List<Bartok.Decorator> newDecotators, System.Collections.Generic.List<Bartok.CardDefinition> newCardDefs) {
        var index = GameComponentsLookup.Deck;
        var component = CreateComponent<Bartok.DeckComponent>(index);
        component.decotators = newDecotators;
        component.cardDefs = newCardDefs;
        AddComponent(index, component);
    }

    public void ReplaceDeck(System.Collections.Generic.List<Bartok.Decorator> newDecotators, System.Collections.Generic.List<Bartok.CardDefinition> newCardDefs) {
        var index = GameComponentsLookup.Deck;
        var component = CreateComponent<Bartok.DeckComponent>(index);
        component.decotators = newDecotators;
        component.cardDefs = newCardDefs;
        ReplaceComponent(index, component);
    }

    public void RemoveDeck() {
        RemoveComponent(GameComponentsLookup.Deck);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherDeck;

    public static Entitas.IMatcher<GameEntity> Deck {
        get {
            if (_matcherDeck == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.Deck);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherDeck = matcher;
            }

            return _matcherDeck;
        }
    }
}
