//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentContextApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameContext {

    public GameEntity deckResMgrEntity { get { return GetGroup(GameMatcher.DeckResMgr).GetSingleEntity(); } }
    public Bartok.DeckResMgrComponent deckResMgr { get { return deckResMgrEntity.deckResMgr; } }
    public bool hasDeckResMgr { get { return deckResMgrEntity != null; } }

    public GameEntity SetDeckResMgr(DeckResMgr newValue) {
        if (hasDeckResMgr) {
            throw new Entitas.EntitasException("Could not set DeckResMgr!\n" + this + " already has an entity with Bartok.DeckResMgrComponent!",
                "You should check if the context already has a deckResMgrEntity before setting it or use context.ReplaceDeckResMgr().");
        }
        var entity = CreateEntity();
        entity.AddDeckResMgr(newValue);
        return entity;
    }

    public void ReplaceDeckResMgr(DeckResMgr newValue) {
        var entity = deckResMgrEntity;
        if (entity == null) {
            entity = SetDeckResMgr(newValue);
        } else {
            entity.ReplaceDeckResMgr(newValue);
        }
    }

    public void RemoveDeckResMgr() {
        deckResMgrEntity.Destroy();
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public Bartok.DeckResMgrComponent deckResMgr { get { return (Bartok.DeckResMgrComponent)GetComponent(GameComponentsLookup.DeckResMgr); } }
    public bool hasDeckResMgr { get { return HasComponent(GameComponentsLookup.DeckResMgr); } }

    public void AddDeckResMgr(DeckResMgr newValue) {
        var index = GameComponentsLookup.DeckResMgr;
        var component = CreateComponent<Bartok.DeckResMgrComponent>(index);
        component.value = newValue;
        AddComponent(index, component);
    }

    public void ReplaceDeckResMgr(DeckResMgr newValue) {
        var index = GameComponentsLookup.DeckResMgr;
        var component = CreateComponent<Bartok.DeckResMgrComponent>(index);
        component.value = newValue;
        ReplaceComponent(index, component);
    }

    public void RemoveDeckResMgr() {
        RemoveComponent(GameComponentsLookup.DeckResMgr);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherDeckResMgr;

    public static Entitas.IMatcher<GameEntity> DeckResMgr {
        get {
            if (_matcherDeckResMgr == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.DeckResMgr);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherDeckResMgr = matcher;
            }

            return _matcherDeckResMgr;
        }
    }
}
