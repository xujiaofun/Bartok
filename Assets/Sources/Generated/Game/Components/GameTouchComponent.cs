//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public Bartok.TouchComponent touch { get { return (Bartok.TouchComponent)GetComponent(GameComponentsLookup.Touch); } }
    public bool hasTouch { get { return HasComponent(GameComponentsLookup.Touch); } }

    public void AddTouch(GameEntity newTarget) {
        var index = GameComponentsLookup.Touch;
        var component = CreateComponent<Bartok.TouchComponent>(index);
        component.target = newTarget;
        AddComponent(index, component);
    }

    public void ReplaceTouch(GameEntity newTarget) {
        var index = GameComponentsLookup.Touch;
        var component = CreateComponent<Bartok.TouchComponent>(index);
        component.target = newTarget;
        ReplaceComponent(index, component);
    }

    public void RemoveTouch() {
        RemoveComponent(GameComponentsLookup.Touch);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherTouch;

    public static Entitas.IMatcher<GameEntity> Touch {
        get {
            if (_matcherTouch == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.Touch);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherTouch = matcher;
            }

            return _matcherTouch;
        }
    }
}
